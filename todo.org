* Notes
  - (setq auto-revert-interval 2)
* Known problems
** for short populations, the mutation ratio bugs out
   $ perl main.pl -t anna.png -p 20 -i 5000 -se output/gen2706-anna/series.014/gene_003365.txt
   Loading file 'output/gen2706-anna/series.014/gene_003365.txt'.
   22 genes loaded. The best gene has distance '0.0649357727423015' to image.
   Creating -2 mutations of the seed.
   Creating images::::::::::::::::::^C
** The scrub_genes sub is overzealous in removing genes. 
    Scrubbed Gene. Old len: 843, New len: 695
    Original gene length: 843       distance: 0.052
    Scrubbed gene length: 695       distance: 0.053

* cleaning todos
** TODO fix order of radius strategies
** DONE rename all setters. current naming is confusing
   CLOSED: [2020-02-13 tor 21:41]
** TODO write description for each sub
** TODO consider fixing all subs so that they take positional params
        from: 
        sub foo() {
          my $a = shift;
          my $b = shift || 0;
        }
        
        to:
        
        sub foo($a, $b=0) {
          ...
        }

** TODO prefix internal subs with underscore
* ideas
** Remove scrubbing?  
   It seems research in GP says that introns (what I call dead
   alleles) are good for the population, increasing the variability.
** TODO if given seed, save to same dir as seed
** DONE Add datetime to stdout
   CLOSED: [2020-02-18 tis 13:06]
** DONE Radius strategy
   CLOSED: [2020-02-18 tis 13:06]
   - Start with XL radius strategy, and when it doesn't do enough, drop it and don't go back.
   - Same with L strategy - when it's not good enough, don't do that anymore
** DONE Clean up dead alleles
   CLOSED: [2020-02-18 tis 13:06]
   - a dead allele is one which is entirely occluded by a more recent
     circle.
   - Logically, if it was covered at some point and the distance went
     down, then it wasn't as good an allele. So it should be safe to remove.
   - However, I haven't thought it through entirely - since the BG
     image isn't homogenous, I think there's a situation where about
     half a circle matches the background.
** DONE Diversify the population.
   CLOSED: [2020-02-18 tis 13:06]
   - if no real change has occurred for quite some time, it's time to
     diversify the population, then let these diverse populations meet
     again.


** TODO A proper rewrite
*** Alleles/Genes
   - make an allele one value instead of an array of values
   - allele value can be 0 - 2047
   - make the gene consist of an array of alleles
   - an ALLELE STRING is a series of alleles which describe one geometrical object
   - Allele string:
     - first element in an allele string describes the type/length
       1. circle x,y,R,r,g,b
       2. rectangle x1,y1,x2,y2,r,g,b
       3. triangle x1,y1,x2,y2,x3,y3,r,g,b
     - Use modulo operations to get the numbers to fit.
     - early optimization: create four modulo tables in the beginning, since lookups are cheaper than modulo calculation
*** Remove diversification and scrubbing
    this destroys genetic variation, leading to earlier convergence
*** Support different kinds of mutations
    1. Insert mutation
       Select two alleles at random (a1, a2). Insert a2 after a1, shifting the rest upwards
    2. Inversion mutation
       Select two alleles at random, then invert the alleles values between them (v+1024)
    3. Scramble mutation
       Select subset of alleles, and move them to each others' locations without changing them
    4. Swap mutation
       Select two alleles and swap their locations
    5. Reversing mutation
       Select two alleles at random, then reverse the location order of the alleles between them
    6. Creep mutation
       Select an allele and replace it with a random value
*** Data Structure of populations
    - A currentState is a hash with the following key/values
      - 'generations'   => (optional) scalar with # of iterations
      - 'individuals'   => ref to array of individuals
      - 'target'        => (optional) string, with filename of target image
      - 'best_distance' => scalar with best distance among individuals

    - An individual is a hash, with following key/values
      - 'gene'          => ref to array of alleles
      - 'image'         => (optional) ref to imagemagick image object
      - 'distance'      => (optional) scalar with output from distance function
      - 


